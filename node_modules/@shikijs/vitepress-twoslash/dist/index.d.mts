import { TransformerTwoslashOptions } from '@shikijs/twoslash/core';
import { ShikiTransformer } from 'shiki';
import { VueSpecificOptions } from 'twoslash-vue';
import { RendererRichOptions, TwoslashRenderer } from '@shikijs/twoslash';
export { defaultHoverInfoProcessor } from '@shikijs/twoslash';

interface TwoslashFloatingVueOptions {
    classCopyIgnore?: string;
    classFloatingPanel?: string;
    classCode?: string;
    classMarkdown?: string;
    floatingVueTheme?: string;
    floatingVueThemeQuery?: string;
    floatingVueThemeCompletion?: string;
}
interface TwoslashFloatingVueRendererOptions extends RendererRichOptions {
    /**
     * Class and themes for floating-vue specific nodes
     */
    floatingVue?: TwoslashFloatingVueOptions;
}
declare function rendererFloatingVue(options?: TwoslashFloatingVueRendererOptions): TwoslashRenderer;

interface TransformerTwoslashVueOptions extends TransformerTwoslashOptions {
    twoslashOptions?: TransformerTwoslashOptions['twoslashOptions'] & VueSpecificOptions;
}
interface VitePressPluginTwoslashOptions extends TransformerTwoslashVueOptions, TwoslashFloatingVueRendererOptions {
    /**
     * Requires adding `twoslash` to the code block explicitly to run twoslash
     * @default true
     */
    explicitTrigger?: TransformerTwoslashOptions['explicitTrigger'];
}
/**
 * Create a Shiki transformer for VitePress to enable twoslash integration
 *
 * Add this to `markdown.codeTransformers` in `.vitepress/config.ts`
 */
declare function transformerTwoslash(options?: VitePressPluginTwoslashOptions): ShikiTransformer;

export { type TwoslashFloatingVueOptions, type TwoslashFloatingVueRendererOptions, type VitePressPluginTwoslashOptions, rendererFloatingVue, transformerTwoslash };
